#!/usr/bin/env ruby

require 'net/http'

# get id
user = IO.popen("whoami", "r+").gets.chomp
program = ARGV[0].to_s
idfile = "/Users/#{user}/Library/Gyazo/id"
old_idfile = File.dirname(program) + "/gyazo.app/Contents/Resources/id"

id = ''
if File.exist?(idfile) then
  id = File.read(idfile).chomp
elsif File.exist?(old_idfile) then
  id = File.read(old_idfile).chomp
end

# capture png file
tmpfile = "/tmp/image_upload#{$$}.png"
imagefile = ARGV[1]

if imagefile && File.exist?(imagefile) then
  system "sips -s format png \"#{imagefile}\" --out \"#{tmpfile}\""
else
  system "screencapture -i \"#{tmpfile}\""
  if File.exist?(tmpfile) then
    system "sips -d profile --deleteColorManagementProperties \"#{tmpfile}\""  
  end
end

if !File.exist?(tmpfile) then
  exit
end

imagedata = File.read(tmpfile)
File.delete(tmpfile)

# upload
boundary = '----BOUNDARYBOUNDARY----'

HOST = 'api.imgur.com'
CGI = '/2/upload'
UA   = 'Gyazo/1.0'

data = <<EOF
--#{boundary}\r
content-disposition: form-data; name="key"\r
\r
c9d535f1f6dae53ef2c9e40619bcced2\r
--#{boundary}\r
content-disposition: form-data; name="image"; filename="gyazo.com"\r
\r
#{imagedata}\r
--#{boundary}--\r
EOF

header ={
  'Content-Length' => data.length.to_s,
  'Content-type' => "multipart/form-data; boundary=#{boundary}",
  'User-Agent' => UA
}

Net::HTTP.start(HOST,80){|http|
  res = http.post(CGI,data,header)
  puts res.response.to_ary.inspect
  resbody = res.response.to_ary[1]
  url = resbody.match(/original>(.*)<\/original/)[1]
  
  system "echo -n #{url} | pbcopy"
  system "open #{url}"
}
